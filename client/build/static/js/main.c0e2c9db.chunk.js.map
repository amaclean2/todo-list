{"version":3,"sources":["Application/Todos/create.component.jsx","Application/Todos/Ducks/actions.js","Application/Todos/Ducks/operations.js","Application/Todos/create.container.js","Application/Todos/todos.component.jsx","Application/Todos/todos.container.js","serviceWorker.js","Redux/enhancers/monitorReducer.js","Redux/reducers/index.js","Application/Todos/Ducks/reducers.js","Redux/configureStore.js","index.js","App.jsx","Application/Todos/Ducks/types.js"],"names":["CreateTodo","_ref","_ref$create","create","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","react_default","a","createElement","className","placeholder","autoFocus","value","type","onChange","e","target","onClick","updateTodos","json","pluralTypes","fetchTodos","dispatch","requestTodos","fetch","method","headers","Headers","Content-Type","then","resp","receiveTodos","data","totalCount","total_count","receivedAt","Date","now","actions","catch","err","console","log","completeTodo","id","getState","todo","activeTodo","todos","find","_id","toString","completedTodo","objectSpread","completed","body","JSON","stringify","connect","state","saveTodo","ViewSwitcher","_ref2","_ref2$viewState","viewState","_ref2$setViewState","setViewState","checked","name","Todo","_ref3","_ref3$title","_ref3$id","_ref3$deleteTodo","deleteTodo","_ref3$complete","complete","_ref3$completed","renderCompleteBox","index_esm","FakeTodo","TodoList","_ref$todos","_ref$request","request","_ref$updateCheck","updateCheck","useEffect","buildTodo","key","todos_component_Todo","concat","renderTodos","map","i","filter","renderFakeTodo","todos_component_FakeTodo","todos_component_ViewSwitcher","length","needsUpdate","undefined","shouldFetchTodos","Boolean","window","location","hostname","match","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","newState","end","diff","Math","round","tbApp","combineReducers","arguments","isFetching","loggerMiddleware","createLogger","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","configureStore","render","es","renderHeader","create_container","todos_container","document","getElementById","navigator","serviceWorker","ready","registration","unregister","exports","singularTypes","requestTodo","receiveTodo","updateTodo"],"mappings":"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","file":"static/js/main.c0e2c9db.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst CreateTodo = ({\n    create = () => {}\n}) => {\n    const\n        [title, setTitle] = useState(\"\")\n\n    const handleSubmit = () => {\n        if (title) {\n            create(title)\n            setTitle(\"\")\n        }\n    }\n\n    return <div className=\"todo-creator flex-container\">\n        <input\n            placeholder=\"I want to ____ today\"\n            autoFocus={true}\n            className=\"text-input\"\n            value={title}\n            type=\"text\"\n            onChange={e => setTitle(e.target.value)} />\n        <button\n            className=\"submit-button\"\n            onClick={() => handleSubmit()}>create todo</button>\n    </div>\n}\n\nCreateTodo.propTypes = {\n    create: PropTypes.func\n}\n\nexport default CreateTodo","import { pluralTypes, singularTypes } from './types'\n\nexport const requestTodos = () => ({\n\ttype: pluralTypes.requestTodos\n})\n\nexport const receiveTodos = json => ({\n\ttype: pluralTypes.receiveTodos,\n\tdata: json.data,\n\ttotalCount: json.total_count,\n\treceivedAt: Date.now()\n})\n\nexport const requestTodo = id => ({\n\ttype: singularTypes.requestTodo,\n\tid: id\n})\n\nexport const receiveTodo = json => ({\n\ttype: singularTypes.receiveTodo,\n\tdata: json.data,\n\treceivedAt: Date.now()\n})\n\nexport const updateTodo = json => ({\n    type: singularTypes.updateTodo,\n    data: json\n})\n\nexport const updateTodos = json => ({\n\ttype: pluralTypes.updateTodos\n})","import * as actions from './actions'\n\nconst fetchTodos = () => {\n\treturn dispatch => {\n\t\tdispatch(actions.requestTodos())\n\t\treturn fetch(`/api/todos/all`, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: new Headers({'Content-Type': 'application/json'})\n\t\t}).then(resp => resp.json())\n\t\t.then(json => dispatch(actions.receiveTodos(json)))\n\t\t.catch(err => console.log(err))\n\t}\n}\n\nexport const fetchTodo = id => {\n\treturn dispatch => {\n\t\tdispatch(actions.requestTodo(id))\n\t\tif( id !== 0) {\n\t\t\treturn fetch(`/api/todos/singular/${id}`, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: new Headers({ \"Content-Type\": \"application/json\" })\n\t\t\t}).then(resp => resp.json())\n\t\t\t.then(json => dispatch(actions.receiveTodo(json)))\n\t\t\t.catch(err => console.log(err))\n\t\t} else {\n\t\t\tdispatch(actions.receiveTodo({}))\n\t\t}\n\t}\n}\n\nexport const saveTodo = title => {\n\treturn dispatch => {\n\t\treturn fetch(`/api/todos/save`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: new Headers({ \"Content-Type\": \"application/json\" }),\n\t\t\tbody: JSON.stringify({ title })\n\t\t}).then(resp => resp.json())\n\t\t.then(json => dispatch(actions.updateTodos()))\n\t\t.catch(err => console.log(err))\n\t}\n}\n\nexport const editTodo = todo => {\n\treturn dispatch => {\n\t\treturn fetch(`/api/todos/update`, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: new Headers({ \"Content-Type\": \"application/json\" }),\n\t\t\tbody: JSON.stringify(todo)\n\t\t}).then(resp => resp.json())\n\t\t.then(json => dispatch(actions.updateTodos()))\n\t\t.catch(err => console.log(err))\n\t}\n}\n\nexport const completeTodo = id => {\n\treturn (dispatch, getState) => {\n\t\tconst\n\t\t\t{ todos } = getState(),\n\t\t\tactiveTodo = todos.data.find( todo => todo._id.toString() === id ),\n\t\t\tcompletedTodo = { ...activeTodo, completed: !activeTodo.completed }\n\t\t\n\t\tdispatch(editTodo(completedTodo))\n\t}\n}\n\nexport const deleteTodo = id => {\n\treturn dispatch => {\n\t\treturn fetch(`/api/todos/delete/${id}`, {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: new Headers({ \"Content-Type\": \"application/json\" }),\n\t\t}).then(resp => resp.json())\n\t\t.then(json => dispatch(actions.updateTodos()))\n\t\t.catch(err => console.log(err))\n\t}\n}\n\nexport const update = newTodo => dispatch => {\n    dispatch(actions.updateTodo(newTodo))\n}\n\nconst shouldFetchTodos = state => {\n\tconst todos = state.todos\n\tif (!todos) return true\n\telse if (todos.needsUpdate === undefined) return true\n\telse if (todos.needsUpdate === true) return true\n\telse return false\n}\n\nexport const fetchIfNeeded = () => {\n\treturn (dispatch, getState) => {\n\t\tif(shouldFetchTodos(getState())) {\n\t\t\tdispatch(fetchTodos())\n\t\t}\n\t} \n}","import { connect } from 'react-redux'\n\nimport CreateTodo from './create.component'\n\nimport { saveTodo } from './Ducks/operations'\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n    create: title => dispatch(saveTodo(title))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodo)","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { FaTimes } from 'react-icons/fa'\n\nconst TodoList = ({\n    todos = [],\n    request = () => {},\n    deleteTodo,\n    complete,\n    updateCheck = true\n}) => {\n    const\n        [viewState, setViewState] = useState(true)\n\n    useEffect(() => {\n        request()\n    }, [request, updateCheck])\n\n    const buildTodo = (todo, key) => <Todo\n        key={`todo_${key}`}\n        id={todo._id}\n        complete={complete}\n        completed={todo.completed}\n        deleteTodo={deleteTodo}\n        title={todo.title} />\n\n    const renderTodos = (viewState)\n        ? todos.map((e, i) => buildTodo(e, i))\n        : todos.filter( e => !e.completed)\n            .map( (e, i) => buildTodo(e, i))\n\n    const renderFakeTodo = <FakeTodo />\n\n    return <div className=\"todo-list\">\n        <ViewSwitcher\n            viewState={viewState}\n            setViewState={() => setViewState(!viewState)} />\n        { (todos.length) ? renderTodos : renderFakeTodo }\n    </div>\n}\n\nTodoList.propTypes = {\n    todos: PropTypes.array,\n    deleteTodo: PropTypes.func,\n    complete: PropTypes.func\n}\n\nconst ViewSwitcher = ({\n    viewState = 0,\n    setViewState = () => {}\n}) => {\n    return <div className=\"view-switch flex-container\">\n        <label>\n            <input\n                className=\"view-input\"\n                onChange={() => setViewState()}\n                checked={viewState === true}\n                type=\"radio\"\n                name=\"completed\" />\n            <span className=\"view-label\">Show All Todos</span>\n        </label>\n        <label>\n            <input\n                className=\"view-input\"\n                onChange={() => setViewState()}\n                checked={viewState === false}\n                type=\"radio\"\n                name=\"completed\" />\n            <span className=\"view-label\">Show Uncompleted Todos</span>\n        </label>\n    </div>\n}\n\nViewSwitcher.propTypes = {\n\n}\n\nconst Todo = ({\n    title = \"\",\n    id = \"0\",\n    deleteTodo = () => {},\n    complete = () => {},\n    completed = false\n}) => {\n\n    const renderCompleteBox = <label>\n        <input className=\"complete-input\" checked={completed} type=\"checkbox\" onChange={() => complete(id)} />\n        <div className=\"complete-box\"></div>\n    </label>\n\n    return <div className=\"flex-container todo\">\n        { renderCompleteBox }\n        { title }\n        <div className=\"flex-spacer\"></div>\n        <button className=\"delete-button\" onClick={() => deleteTodo(id)}><FaTimes className=\"times-icon\" /></button>\n    </div>\n}\n\nTodo.propTypes = {\n    title: PropTypes.string,\n    id: PropTypes.string,\n    deleteTodo: PropTypes.func,\n    complete: PropTypes.func,\n    completed: PropTypes.bool\n}\n\nconst FakeTodo = () => {\n\n\tconst renderCompleteBox = <label>\n        <input className=\"complete-input\" type=\"checkbox\" />\n        <div className=\"complete-box\"></div>\n    </label>\n\n    return <div className=\"flex-container fake-todo todo\">\n        { renderCompleteBox }\n        Handle more internet traffic than Google\n        <div className=\"flex-spacer\"></div>\n\t\t<button className=\"delete-button\" ><FaTimes className=\"times-icon\" /></button>\n    </div>\n}\n\nexport default TodoList","import { connect } from 'react-redux'\n\nimport { fetchIfNeeded, deleteTodo, completeTodo } from './Ducks/operations'\n\nimport TodoList from './todos.component'\n\nconst mapStateToProps = state => ({\n    todos: state.todos.data,\n    updateCheck: state.todos.needsUpdate\n})\n\nconst mapDispatchToProps = dispatch => ({\n    request: () => dispatch(fetchIfNeeded()),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    complete: id => dispatch(completeTodo(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const round = number => Math.round(number * 100) / 100\n\nconst monitorReducerEnhancer = createStore => (\n  reducer,\n  initialState,\n  enhancer\n) => {\n  const monitoredReducer = (state, action) => {\n    const start = performance.now()\n    const newState = reducer(state, action)\n    const end = performance.now()\n    const diff = round(end - start)\n\n    console.log('reducer process time:', diff)\n\n    return newState\n  }\n\n  return createStore(monitoredReducer, initialState, enhancer)\n}\n\nexport default monitorReducerEnhancer","import { todos, todo } from '../../Application/Todos/Ducks/reducers'\nimport { combineReducers } from 'redux'\n\nconst tbApp = combineReducers({\n\ttodos,\n\ttodo\n})\n\nexport default tbApp","export const todos = (state = {}, action) => {\n\tswitch(action.type) {\n        case \"REQUEST_TODOS\" :\n            return {\n                ...state,\n                isFetching: true,\n                needsUpdate: false\n            }\n        case \"RECEIVE_TODOS\" :\n            return {\n                ...state,\n                isFetching: false,\n                needsUpdate: false,\n                data: action.data\n            }\n        case \"UPDATE_TODOS\" :\n            return {\n                ...state,\n                isFetching: false,\n                needsUpdate: true\n            }\n        default :\n            return state\n    }\n}\n\nexport const todo = (state = {}, action) => {\n\tswitch(action.type) {\n        case \"REQUEST_TODO\" :\n            return {\n                ...state,\n                isFetching: true,\n                needsUpdate: false,\n            }\n        case \"RECEIVE_TODO\" :\n            return {\n                ...state,\n                isFetching: false,\n                needsUpdate: false,\n                data: action.data\n            }\n        case \"UPDATE_TODO\" :\n            return {\n                ...state,\n                data: action.data\n            }\n        default :\n            return state\n    }\n}","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createLogger } from 'redux-logger'\n\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\nimport tbApp from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport const configureStore = preloadedState => {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  return createStore(tbApp, preloadedState, composedEnhancers)\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { configureStore } from './Redux/configureStore'\n\nconst store = configureStore()\n\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, document.getElementById('root'))\n\t\n\tserviceWorker.unregister()\n","import React from 'react';\n\nimport CreateTodo from './Application/Todos/create.container'\nimport TodoList from './Application/Todos/todos.container'\n\nimport './App.scss';\n\nexport default function App() {\n\n\tconst renderHeader = <header className=\"flex-container\">\n\t\t<h1>Todo List</h1>\n\t</header>\n\n\treturn <div className=\"todo-list-app\">\n\t\t{ renderHeader }\n\t\t<CreateTodo />\n\t\t<TodoList />\n\t</div>\n}\n","exports.pluralTypes = {\n    requestTodos: \"REQUEST_TODOS\",\n    receiveTodos: \"RECEIVE_TODOS\",\n    updateTodos: \"UPDATE_TODOS\"\n}\n\nexports.singularTypes = {\n    requestTodo: \"REQUEST_TODO\",\n    receiveTodo: \"RECEIVE_TODO\",\n    updateTodo: \"UPDATE_TODO\"\n}"],"sourceRoot":""}